void convert(int num, char arr[], int len)
{
    for (int i = 0; i < len; i++)
    {
        arr[i] = (num >> (len - i - 1)) & 0xFF;
    }
}

// typedef unsigned char BYTE;



// typedef unsigned char BYTE;

void scene::write(ostream &out)
{

    cout << "write" << endl;

    // out << "BM";
    // out.seekp(2,ios::beg);
    char bfType[2] = {0x42, 0x4D};
    char bfSize[4] = {0,0,0,14};
    char bfReserved1[2] = {0,0};
    char bfReserved2[2] = {0,0};
    char bfOffBits[4] = {0,0,0,12};
    out.write(bfType, 2);
    out.write(bfSize,4);
    out.write(bfReserved1,2);
    out.write(bfReserved2,2);
    out.write(bfOffBits,4);

    char biSize[4] = {0,0,0,40};
    char biWidth[4] = {};
    convert(1920,biWidth,4);
    char biHeight[4] = {};
    convert(1080,biHeight,4);
    char biPlanes[2] = {};
    char biBitCount[2] = {};
    char biCompression[4] = {};
    char biSizeImage[4] = {};
    char biXPelsPerMeter[4] = {};
    char biYPelsPerMeter[4] = {};
    char biClrUsed[4] = {};
    char biClrImportant[4] = {};

    out.write(biSize,4);
    out.write(biWidth,4);
    out.write(biHeight,4);

    out << "Hello World!";



    // out.put(0x42);
    // out.put(0x4D);
    // int size = 0;
    // out.put(size);
    // out.put(size);
    // out.put(0);
    // out.put(0);
    // out.put(0);
    // out.put(0);
    // int addr = 4;
    // out.put(addr);
    // out.put(addr);
    // out.put(addr);
    // out.put(addr);

    //BITMAPV5HEADER
    // int32_t bfSize;

    // out << "P3\n"
    //     << width << " " << height << "\n256\n";
    // for (int i = 0; i < height; i++)
    // {
    //     for (int j = 0; j < width; j++)
    //     {
    //         color c = image[i][j];
    //         out << c.getRed() << " " << c.getGreen() << " " << c.getBlue() << " ";
    //     }
    //     out << endl;
    // }
}